/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.005";
    object      Exner.diff_initConds;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   nonuniform List<scalar> 
50
(
8.01850000842e-08
8.03140000061e-08
7.66969999733e-08
7.64680000431e-08
7.11670000708e-08
6.71330000479e-08
6.45729999471e-08
5.74610000692e-08
5.52359999961e-08
5.78630000581e-08
5.55960000259e-08
5.44910000455e-08
5.44559999316e-08
4.90759999305e-08
4.8134000008e-08
4.52460000577e-08
4.68219999439e-08
4.27410000725e-08
3.28699999441e-08
3.39899999258e-08
2.92219999309e-08
1.84380000157e-08
1.2039999997e-08
1.00910000356e-08
2.03899996887e-09
-5.23900001159e-09
-1.16580000098e-08
-1.7078999992e-08
-2.13070000532e-08
-3.12660000112e-08
-3.57170000242e-08
-3.42770000161e-08
-3.78050000194e-08
-4.61689999565e-08
-4.79339999915e-08
-5.03989999734e-08
-4.59519999829e-08
-5.37540000289e-08
-5.47629999126e-08
-5.68300000392e-08
-5.24309999861e-08
-6.15659999648e-08
-5.67950000363e-08
-6.62679999763e-08
-6.19150000158e-08
-7.19999999621e-08
-7.57720000077e-08
-8.06290000321e-08
-8.51939999658e-08
-7.86649999585e-08
)
;

boundaryField
{
    ground
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform 8.01850000842e-08;
    }
    top
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform -7.86649999585e-08;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
