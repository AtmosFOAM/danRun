/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "0.005";
    object      u;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   nonuniform List<vector> 
50
(
(0 0 -1.36054567092e-05)
(0 0 -3.33639382708e-05)
(0 0 -5.5088780671e-05)
(0 0 -5.88439725061e-05)
(0 0 -4.62413960744e-05)
(0 0 -4.42473732355e-05)
(0 0 -3.01886580628e-05)
(0 0 -3.42957760773e-05)
(0 0 -6.78506556742e-05)
(0 0 -7.02494879305e-05)
(0 0 -5.28907276227e-05)
(0 0 -4.6377210919e-05)
(0 0 -2.79169928881e-05)
(0 0 -2.60817048001e-05)
(0 0 -4.34266159226e-05)
(0 0 -6.06454730403e-05)
(0 0 -5.57206301337e-05)
(0 0 -2.23192699049e-05)
(0 0 -3.50461747775e-05)
(0 0 -4.76909340018e-05)
(0 0 -1.42965119236e-05)
(0 0 -1.27043454669e-05)
(0 0 -4.57918568603e-05)
(0 0 -4.71881759823e-05)
(0 0 -2.87693414364e-05)
(0 0 -2.54501546272e-05)
(0 0 -2.51857597305e-05)
(0 0 -2.2389566513e-05)
(0 0 -4.79275537278e-06)
(0 0 -8.12990869367e-06)
(0 0 -4.46577560227e-05)
(0 0 -4.57216921884e-05)
(0 0 -1.11783322276e-05)
(0 0 -1.03603969945e-05)
(0 0 -3.3556239003e-05)
(0 0 -5.42385052458e-05)
(0 0 -3.820879499e-05)
(0 0 -2.22656388848e-05)
(0 0 -4.27931684307e-05)
(0 0 -6.32116057061e-05)
(0 0 -4.87838251935e-05)
(0 0 -4.66648981387e-05)
(0 0 -4.6360875835e-05)
(0 0 -4.51960144866e-05)
(0 0 -3.96609807872e-05)
(0 0 -1.98381969128e-05)
(0 0 -3.13283954334e-05)
(0 0 -3.23508002728e-05)
(0 0 -4.5109674531e-05)
(0 0 -2.86253155142e-05)
)
;

boundaryField
{
    ground
    {
        type            slip;
    }
    top
    {
        type            slip;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
