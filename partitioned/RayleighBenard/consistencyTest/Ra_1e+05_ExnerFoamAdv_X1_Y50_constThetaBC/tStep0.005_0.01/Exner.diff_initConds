/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.01";
    object      Exner.diff_initConds;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   nonuniform List<scalar> 
50
(
-1.41549999499e-08
-1.53370000033e-08
-1.65450000367e-08
-1.89390000349e-08
-2.00309999698e-08
-2.1086999924e-08
-2.21070000084e-08
-2.17799999147e-08
-2.27530000396e-08
-2.50319999173e-08
-2.59359999033e-08
-2.68180000429e-08
-2.76760000473e-08
-2.71650000272e-08
-2.79709999607e-08
-2.88179999863e-08
-3.10330000586e-08
-3.1787999899e-08
-3.11330000669e-08
-3.33560000731e-08
-3.41440000717e-08
-3.34099999888e-08
-3.41899999423e-08
-3.64559999966e-08
-3.72260000603e-08
-3.79780000781e-08
-3.87679999214e-08
-3.95960000343e-08
-4.04069999682e-08
-3.9676000041e-08
-4.05400000236e-08
-4.30420000752e-08
-4.39309999489e-08
-4.3240000025e-08
-4.41740000134e-08
-4.5234999968e-08
-4.78820000316e-08
-4.73010000057e-08
-4.83459999812e-08
-4.95710000825e-08
-5.24119999623e-08
-5.19959999501e-08
-5.4939000016e-08
-5.46369999244e-08
-5.77569999605e-08
-5.75119999402e-08
-5.90319999549e-08
-6.0660000023e-08
-6.24049999454e-08
-6.59350000154e-08
)
;

boundaryField
{
    ground
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform -1.41549999499e-08;
    }
    top
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform -6.59350000154e-08;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
