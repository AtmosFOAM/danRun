/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "0.005";
    object      u;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   nonuniform List<vector> 
50
(
(0 0 -1.71062193428e-05)
(0 0 -3.9230010553e-05)
(0 0 -6.15126032755e-05)
(0 0 -6.09618381057e-05)
(0 0 -4.0241086607e-05)
(0 0 -3.44408354762e-05)
(0 0 -1.35525282343e-05)
(0 0 -1.58855384916e-05)
(0 0 -5.664584271e-05)
(0 0 -5.89251012745e-05)
(0 0 -3.78614471315e-05)
(0 0 -3.2053755932e-05)
(0 0 -1.08113919346e-05)
(0 0 -1.05624909506e-05)
(0 0 -3.40607527547e-05)
(0 0 -5.77299425355e-05)
(0 0 -5.46279636881e-05)
(0 0 -1.45999184456e-05)
(0 0 -3.30515761432e-05)
(0 0 -5.14098184302e-05)
(0 0 -1.09692138892e-05)
(0 0 -1.08715282676e-05)
(0 0 -5.41687557851e-05)
(0 0 -5.68522259555e-05)
(0 0 -3.48958561303e-05)
(0 0 -3.19338637445e-05)
(0 0 -3.18820316647e-05)
(0 0 -2.89342552719e-05)
(0 0 -6.63237691754e-06)
(0 0 -9.62596146724e-06)
(0 0 -5.44904093122e-05)
(0 0 -5.4450623719e-05)
(0 0 -9.27107585898e-06)
(0 0 -6.41757755946e-06)
(0 0 -3.22595142667e-05)
(0 0 -5.52892045017e-05)
(0 0 -3.23090867454e-05)
(0 0 -9.46375674689e-06)
(0 0 -3.27691657837e-05)
(0 0 -5.62681137121e-05)
(0 0 -3.60504074215e-05)
(0 0 -3.33347818182e-05)
(0 0 -3.34321922289e-05)
(0 0 -3.38505252074e-05)
(0 0 -3.08585982652e-05)
(0 0 -1.05270921551e-05)
(0 0 -3.1652136269e-05)
(0 0 -3.83328744678e-05)
(0 0 -5.97651440122e-05)
(0 0 -3.89257415831e-05)
)
;

boundaryField
{
    ground
    {
        type            slip;
    }
    top
    {
        type            slip;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
