/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "0.005";
    object      u;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   nonuniform List<vector> 
50
(
(0 0 -1.72797658167e-05)
(0 0 -4.21920556794e-05)
(0 0 -6.697908592e-05)
(0 0 -6.98250534289e-05)
(0 0 -5.34200601383e-05)
(0 0 -4.91150953012e-05)
(0 0 -3.23131167684e-05)
(0 0 -3.75721161388e-05)
(0 0 -7.72567366784e-05)
(0 0 -8.20679322336e-05)
(0 0 -6.43712570972e-05)
(0 0 -5.89316840428e-05)
(0 0 -4.05859263514e-05)
(0 0 -4.19151965913e-05)
(0 0 -6.56715465021e-05)
(0 0 -8.925230075e-05)
(0 0 -8.69388377145e-05)
(0 0 -5.1727447912e-05)
(0 0 -6.84091004615e-05)
(0 0 -8.48596233505e-05)
(0 0 -4.91347863305e-05)
(0 0 -4.97165040415e-05)
(0 0 -8.97583056101e-05)
(0 0 -9.32659955909e-05)
(0 0 -7.32853451505e-05)
(0 0 -6.96020202214e-05)
(0 0 -6.89129257205e-05)
(0 0 -6.50196840097e-05)
(0 0 -4.43341291393e-05)
(0 0 -4.76018030925e-05)
(0 0 -8.82792293456e-05)
(0 0 -8.76313805868e-05)
(0 0 -4.55103959892e-05)
(0 0 -4.14430095734e-05)
(0 0 -6.48587895782e-05)
(0 0 -8.50659601831e-05)
(0 0 -6.29508218613e-05)
(0 0 -4.08282119916e-05)
(0 0 -6.06640283512e-05)
(0 0 -8.06591966225e-05)
(0 0 -6.10718317375e-05)
(0 0 -5.57697778657e-05)
(0 0 -5.33021939668e-05)
(0 0 -5.08752598126e-05)
(0 0 -4.46032244462e-05)
(0 0 -2.35548309388e-05)
(0 0 -3.92878686988e-05)
(0 0 -4.33314908743e-05)
(0 0 -5.86671282672e-05)
(0 0 -3.6022806808e-05)
)
;

boundaryField
{
    ground
    {
        type            slip;
    }
    top
    {
        type            slip;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
