/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.005";
    object      Exner.diff_ExVsTurb;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   nonuniform List<scalar> 
50
(
-3.05199998607e-09
1.86419999437e-08
2.79529999148e-08
-2.51389999928e-08
-4.68649999918e-08
9.7540000521e-09
-9.23900000949e-09
-4.00000033096e-11
1.48779999432e-08
-1.44459999518e-08
1.32859999669e-08
2.06150000404e-08
5.65600000169e-09
-1.92499999274e-08
-2.59380000811e-08
-1.43159999411e-08
-1.70160000534e-08
-3.5999999648e-09
2.99499991474e-09
-1.26779999832e-08
7.88699994203e-09
6.52000009538e-10
6.13299999674e-09
1.72530000286e-08
-1.07940000271e-08
2.63800004063e-09
3.86499998672e-09
-1.12389999529e-08
-1.05449999843e-08
-1.40320000064e-08
5.18499998492e-09
9.57200008145e-09
-2.05879999715e-08
1.38689999485e-08
2.91580000145e-08
1.70599999683e-08
2.23310000491e-08
3.33290000043e-08
-5.9670999919e-08
3.88259999706e-08
-2.31560000064e-08
6.09700001597e-09
-3.97289999787e-08
2.20090000669e-08
2.53099999847e-08
2.87189999559e-08
-4.07199999275e-08
3.03610000474e-08
-9.42700006945e-09
-1.05419999397e-08
)
;

boundaryField
{
    ground
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform -3.26313758237e-08;
    }
    top
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform -4.66945704325e-08;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
