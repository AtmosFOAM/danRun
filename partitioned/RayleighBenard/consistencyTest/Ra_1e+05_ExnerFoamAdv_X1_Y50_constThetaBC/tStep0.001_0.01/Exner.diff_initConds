/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.01";
    object      Exner.diff_initConds;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   nonuniform List<scalar> 
50
(
-1.97180000105e-08
-1.82120000192e-08
-1.39679999789e-08
-1.30480000138e-08
-1.22559999927e-08
-1.52479999738e-08
-2.09100000648e-08
-2.33959999152e-08
-2.41900000031e-08
-2.31889999425e-08
-1.86579999228e-08
-1.61450000036e-08
-1.6252000079e-08
-1.45790000072e-08
-1.41529999942e-08
-9.83199999194e-09
-7.76899999888e-09
-6.18199991198e-09
-4.07599998198e-09
-8.20000001234e-09
-1.15220000207e-08
-1.45259999584e-08
-1.7948999953e-08
-2.11220000379e-08
-2.17810000036e-08
-2.46350000399e-08
-2.83289999237e-08
-3.27199999317e-08
-3.8917000067e-08
-4.18310001082e-08
-4.33919999931e-08
-4.43750000079e-08
-4.48839999612e-08
-4.54890000112e-08
-4.75429999813e-08
-4.48820000054e-08
-4.53899999808e-08
-4.18870000907e-08
-4.20239999466e-08
-3.83360000411e-08
-3.80460000171e-08
-3.27449999338e-08
-3.66800000373e-08
-3.44109999384e-08
-4.13580000247e-08
-4.28940000186e-08
-4.69629999333e-08
-4.56159999773e-08
-3.84359999384e-08
-3.47249999866e-08
)
;

boundaryField
{
    ground
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform -1.97180000105e-08;
    }
    top
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform -3.47249999866e-08;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
