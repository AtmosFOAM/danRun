/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.01";
    object      Exner.diff_initConds;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   nonuniform List<scalar> 
52
(
3.48264999994e-06
3.46507799998e-06
3.43876200004e-06
3.40080500005e-06
3.35075299995e-06
3.289267e-06
3.21818799998e-06
3.140136e-06
3.05717899995e-06
2.97015200001e-06
2.87776300001e-06
2.77598100007e-06
2.65919200004e-06
2.52163299996e-06
2.35891099998e-06
2.17042100004e-06
1.96000500008e-06
1.73677799997e-06
1.51373599999e-06
1.30569199996e-06
1.12757600002e-06
9.90701000014e-07
9.00618999933e-07
8.56075e-07
8.48818999977e-07
8.64300999992e-07
8.84470000018e-07
8.90645999951e-07
8.6671599997e-07
8.02037000036e-07
6.92744000053e-07
5.42687999983e-07
3.62374000029e-07
1.6630200006e-07
-3.00299999312e-08
-2.12753999973e-07
-3.72789000003e-07
-5.06341999995e-07
-6.15931999959e-07
-7.07576000014e-07
-7.89167000081e-07
-8.67024999907e-07
-9.45262000007e-07
-1.02307399996e-06
-1.09751900002e-06
-1.163074e-06
-1.21581000001e-06
-1.25358400005e-06
-1.277696e-06
-1.29227699996e-06
3.4899100001e-06
-1.29668500004e-06
)
;

boundaryField
{
    ground
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform 3.46033062404e-06;
    }
    top
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform -1.33283757053e-06;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
