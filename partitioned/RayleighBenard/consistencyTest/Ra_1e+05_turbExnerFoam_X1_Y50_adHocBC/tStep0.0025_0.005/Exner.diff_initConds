/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.005";
    object      Exner.diff_initConds;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   nonuniform List<scalar> 
52
(
-4.75189999571e-08
-3.42760000382e-08
-1.4172000018e-08
7.48000006379e-09
3.03070000207e-08
5.43999999492e-08
7.97000000441e-08
1.06003999911e-07
1.33974999983e-07
1.63583000035e-07
1.94035000067e-07
2.25383000041e-07
2.57574999996e-07
2.90412999981e-07
3.24416000064e-07
3.59603000044e-07
3.9588200007e-07
4.32419999918e-07
4.69320999952e-07
5.07463999933e-07
5.45885999959e-07
5.84304000073e-07
6.23668000022e-07
6.63949999979e-07
7.04275999963e-07
7.44707000067e-07
7.85387999969e-07
8.26261999931e-07
8.67070000021e-07
9.07595000044e-07
9.48634999998e-07
9.90174999993e-07
1.03107000005e-06
1.07122300008e-06
1.11144900006e-06
1.15177100002e-06
1.19184900005e-06
1.230756e-06
1.26923200006e-06
1.307517e-06
1.34523699991e-06
1.38165200003e-06
1.417462e-06
1.45200199997e-06
1.48574699999e-06
1.51778099999e-06
1.54864299995e-06
1.57838500003e-06
1.60724599996e-06
1.62785400004e-06
-4.78299999607e-08
1.62894299993e-06
)
;

boundaryField
{
    ground
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform -7.74093760203e-08;
    }
    top
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform 1.59279042944e-06;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
