/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.01";
    object      Exner.diff_initConds;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   nonuniform List<scalar> 
52
(
4.82099999921e-07
5.08735999993e-07
5.28695000002e-07
5.44970000016e-07
5.56981999966e-07
5.68287000013e-07
5.80162999975e-07
5.9170299993e-07
6.06635999989e-07
6.2516999999e-07
6.43942000056e-07
6.6452900005e-07
6.8678100007e-07
7.08756999979e-07
7.33663000019e-07
7.59651999971e-07
7.88282999986e-07
8.15878999916e-07
8.42364999976e-07
8.73099999965e-07
9.02594999963e-07
9.30687000023e-07
9.61116999987e-07
9.93934999971e-07
1.02541299996e-06
1.05744700007e-06
1.09014399996e-06
1.12352399995e-06
1.157508e-06
1.19010100008e-06
1.22518700008e-06
1.26276000001e-06
1.29867400001e-06
1.33273800007e-06
1.36882400004e-06
1.40474800003e-06
1.44216800002e-06
1.47457800004e-06
1.5077790001e-06
1.53944900005e-06
1.57121699995e-06
1.596444e-06
1.62342199994e-06
1.64365800004e-06
1.66604700003e-06
1.68274000001e-06
1.70190599991e-06
1.72419900002e-06
1.75367200006e-06
1.79548400003e-06
4.95980000181e-07
1.77561999992e-06
)
;

boundaryField
{
    ground
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform 4.66400624122e-07;
    }
    top
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform 1.73946742943e-06;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
