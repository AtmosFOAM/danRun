/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.005";
    object      Exner.diff_initConds;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   nonuniform List<scalar> 
52
(
2.4408699999e-06
2.41926800004e-06
2.40312200006e-06
2.39951500003e-06
2.41385200006e-06
2.44398499993e-06
2.48037299999e-06
2.50813299996e-06
2.51041199995e-06
2.47413499999e-06
2.39416199999e-06
2.27443900003e-06
2.12785600007e-06
1.97263599999e-06
1.82654699998e-06
1.70357899998e-06
1.60974200003e-06
1.54364899996e-06
1.49696899998e-06
1.45664699991e-06
1.40968399998e-06
1.34410700003e-06
1.25154499997e-06
1.12882100001e-06
9.78140999974e-07
8.0552300008e-07
6.20283999941e-07
4.32858999977e-07
2.52945000057e-07
8.82010000591e-08
-5.8041999984e-08
-1.86700999993e-07
-3.03020999959e-07
-4.16191999975e-07
-5.37232999975e-07
-6.74820999969e-07
-8.33332999939e-07
-1.00816399995e-06
-1.18775699998e-06
-1.35336999996e-06
-1.48639000008e-06
-1.5724889999e-06
-1.60971500007e-06
-1.60536499993e-06
-1.57784200006e-06
-1.54573599997e-06
-1.525655e-06
-1.52416900001e-06
-1.53865399999e-06
-1.56239299998e-06
2.45286e-06
-1.57537000001e-06
)
;

boundaryField
{
    ground
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform 2.42328062394e-06;
    }
    top
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform -1.6115225705e-06;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
