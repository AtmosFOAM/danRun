/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.01";
    object      Exner.diff_initConds;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   nonuniform List<scalar> 
52
(
1.19022999989e-06
1.19245800001e-06
1.19865500003e-06
1.20524400005e-06
1.21206699999e-06
1.21905099992e-06
1.226194e-06
1.23354699999e-06
1.24128099999e-06
1.24941299995e-06
1.25775100002e-06
1.26619500007e-06
1.27474300005e-06
1.28344499994e-06
1.29237400004e-06
1.30171400003e-06
1.311281e-06
1.32087399995e-06
1.33056999996e-06
1.34049099998e-06
1.35052700001e-06
1.36052200006e-06
1.37077999995e-06
1.38132399996e-06
1.39193799997e-06
1.402516e-06
1.41317000002e-06
1.42389199997e-06
1.43454900003e-06
1.44520100009e-06
1.45604500001e-06
1.46710000004e-06
1.47801299999e-06
1.48873600003e-06
1.49948200001e-06
1.51047100005e-06
1.52135800002e-06
1.532104e-06
1.54268700003e-06
1.55346700004e-06
1.56409399998e-06
1.57465900008e-06
1.58492899993e-06
1.59525499999e-06
1.60525600001e-06
1.6151490001e-06
1.62477199994e-06
1.63440199996e-06
1.64398199998e-06
1.64843100003e-06
1.19123999998e-06
1.64785500001e-06
)
;

boundaryField
{
    ground
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform 1.16166062392e-06;
    }
    top
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform 1.61170242952e-06;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
