/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "0.01";
    object      u;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   nonuniform List<vector> 
52
(
(0 0 -0.000476920029151)
(0 0 -0.00108676512023)
(0 0 -0.00132003488197)
(0 0 -0.00138561818206)
(0 0 -0.00141527932624)
(0 0 -0.00144600413927)
(0 0 -0.00147153402243)
(0 0 -0.00151391103462)
(0 0 -0.00157647759386)
(0 0 -0.00161514007401)
(0 0 -0.00163324598687)
(0 0 -0.00165285597388)
(0 0 -0.00166667496869)
(0 0 -0.0016939474541)
(0 0 -0.00173797845164)
(0 0 -0.00177974481618)
(0 0 -0.00179719928195)
(0 0 -0.00179418711701)
(0 0 -0.00182040945636)
(0 0 -0.00184484204573)
(0 0 -0.00183714146566)
(0 0 -0.00185096987234)
(0 0 -0.00189033523969)
(0 0 -0.00190534628301)
(0 0 -0.00189953953152)
(0 0 -0.00190024506678)
(0 0 -0.0019032733421)
(0 0 -0.00190041886638)
(0 0 -0.00188740267092)
(0 0 -0.00189225199934)
(0 0 -0.00191855723931)
(0 0 -0.00191402611993)
(0 0 -0.00187861879359)
(0 0 -0.00186555042968)
(0 0 -0.00187474239965)
(0 0 -0.00187773170136)
(0 0 -0.00184916161768)
(0 0 -0.00181859512419)
(0 0 -0.00181497500111)
(0 0 -0.00180989577175)
(0 0 -0.00177764761742)
(0 0 -0.00174770877612)
(0 0 -0.00171967490814)
(0 0 -0.00168934756811)
(0 0 -0.00165198372351)
(0 0 -0.00160696484351)
(0 0 -0.00158013610402)
(0 0 -0.00152678906933)
(0 0 -0.00129146576019)
(0 0 -0.000571398008622)
(0 0 -2.42898772294e-05)
(0 0 -2.41359210748e-05)
)
;

boundaryField
{
    ground
    {
        type            calculated;
        value           uniform (0 0 0);
    }
    top
    {
        type            calculated;
        value           uniform (0 0 0);
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
