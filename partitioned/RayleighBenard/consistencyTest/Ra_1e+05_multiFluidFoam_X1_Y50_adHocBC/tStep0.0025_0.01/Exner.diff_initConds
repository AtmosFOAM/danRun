/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.01";
    object      Exner.diff_initConds;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   nonuniform List<scalar> 
52
(
7.20479999883e-07
6.76235999975e-07
6.46963000062e-07
6.2694300007e-07
6.18850000023e-07
6.18160999943e-07
6.23227000007e-07
6.35290999917e-07
6.4791800003e-07
6.6002900001e-07
6.75986000065e-07
6.92290999971e-07
7.08347000056e-07
7.26488999958e-07
7.40935999999e-07
7.54280000015e-07
7.63491000089e-07
7.74059000008e-07
7.86035999956e-07
7.90952999985e-07
7.97582000001e-07
8.06135000087e-07
8.11109999943e-07
8.12785999948e-07
8.17330999991e-07
8.2201899998e-07
8.27213999965e-07
8.33265999978e-07
8.40496999999e-07
8.52404000051e-07
8.63135000029e-07
8.7291499995e-07
8.88159000012e-07
9.09009000072e-07
9.29185000054e-07
9.51971000029e-07
9.7380600006e-07
1.00429200001e-06
1.03301400001e-06
1.06280099998e-06
1.08931299991e-06
1.12172400002e-06
1.144831e-06
1.17098500008e-06
1.18406999994e-06
1.19592300007e-06
1.19304799995e-06
1.17582100001e-06
1.14011600005e-06
1.07668799998e-06
7.04520000117e-07
1.10339199999e-06
)
;

boundaryField
{
    ground
    {
        type            partitionedHydrostaticExner;
        gradient        uniform 0;
        value           uniform 7.04520000117e-07;
    }
    top
    {
        type            partitionedHydrostaticExner;
        gradient        uniform 0;
        value           uniform 1.10339199999e-06;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
