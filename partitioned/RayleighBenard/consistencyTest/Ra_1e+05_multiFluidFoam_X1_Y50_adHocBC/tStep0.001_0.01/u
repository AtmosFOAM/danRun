/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "0.01";
    object      u;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   nonuniform List<vector> 
52
(
(0 0 -0.000410821343004)
(0 0 -0.00100281443141)
(0 0 -0.00122850423056)
(0 0 -0.00131710092272)
(0 0 -0.00138858535329)
(0 0 -0.00147876299935)
(0 0 -0.00156972085825)
(0 0 -0.00167686213702)
(0 0 -0.00180025202516)
(0 0 -0.00189160725443)
(0 0 -0.00195856659995)
(0 0 -0.00203021790447)
(0 0 -0.00210217330844)
(0 0 -0.00220064708354)
(0 0 -0.0023310346011)
(0 0 -0.00247399806999)
(0 0 -0.00260596086065)
(0 0 -0.00272594821731)
(0 0 -0.0028849321292)
(0 0 -0.00304300933368)
(0 0 -0.00316050794648)
(0 0 -0.0032903681463)
(0 0 -0.00343064659453)
(0 0 -0.0035224375107)
(0 0 -0.00356669275788)
(0 0 -0.00359010385021)
(0 0 -0.00358584306938)
(0 0 -0.00354667860766)
(0 0 -0.00346887914316)
(0 0 -0.00338613925774)
(0 0 -0.00330828084141)
(0 0 -0.0031843903037)
(0 0 -0.00302118210123)
(0 0 -0.00288358450438)
(0 0 -0.00277588713657)
(0 0 -0.00267415436246)
(0 0 -0.00255346190775)
(0 0 -0.00244686640047)
(0 0 -0.00238411449484)
(0 0 -0.00233050002972)
(0 0 -0.00225098632922)
(0 0 -0.00217180307467)
(0 0 -0.00208369538342)
(0 0 -0.00197915360676)
(0 0 -0.00185559890494)
(0 0 -0.00171971202177)
(0 0 -0.00161598083003)
(0 0 -0.00150405309029)
(0 0 -0.0012528370643)
(0 0 -0.000523929679363)
(0 0 7.53379295493e-06)
(0 0 7.83680760273e-06)
)
;

boundaryField
{
    ground
    {
        type            calculated;
        value           uniform (0 0 0);
    }
    top
    {
        type            calculated;
        value           uniform (0 0 0);
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
