/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.01";
    object      Exner.diff_initConds;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   nonuniform List<scalar> 
50
(
-1.3711000002e-08
-1.36950000229e-08
-1.35069999629e-08
-1.32730000324e-08
-1.30659999487e-08
-1.29649999625e-08
-1.29680000072e-08
-1.30109999441e-08
-1.2918000003e-08
-1.26689999602e-08
-1.24469999863e-08
-1.23390000439e-08
-1.23409999997e-08
-1.23880000702e-08
-1.24019999825e-08
-1.21909999873e-08
-1.19330000325e-08
-1.18209999567e-08
-1.17630000185e-08
-1.16330000077e-08
-1.15300000658e-08
-1.15959999381e-08
-1.15210000429e-08
-1.12750000447e-08
-1.10650000273e-08
-1.09860001096e-08
-1.09150000149e-08
-1.08490000317e-08
-1.09100000145e-08
-1.10260000019e-08
-1.09880000654e-08
-1.07750000033e-08
-1.0726999955e-08
-1.08739999227e-08
-1.09939999327e-08
-1.08559999878e-08
-1.08009999833e-08
-1.0845999987e-08
-1.10029999556e-08
-1.09000000137e-08
-1.08809999899e-08
-1.08350000083e-08
-1.09850000207e-08
-1.09629999523e-08
-1.11379999668e-08
-1.12789999562e-08
-1.15409999335e-08
-1.16670000327e-08
-1.16619999213e-08
-1.16619999213e-08
)
;

boundaryField
{
    ground
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform -4.32903758396e-08;
    }
    top
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform -4.78145704141e-08;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
