/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.01";
    object      Exner.diff_initConds;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   nonuniform List<scalar> 
50
(
-1.44580000194e-08
-1.40550000527e-08
-1.36659999983e-08
-1.28360000407e-08
-1.26360000241e-08
-1.26049999327e-08
-1.27329999877e-08
-1.34839999166e-08
-1.37250000254e-08
-1.34329999346e-08
-1.37549999168e-08
-1.42220000221e-08
-1.48260000943e-08
-1.60670000637e-08
-1.6780999923e-08
-1.74379999329e-08
-1.7556999965e-08
-1.83419999189e-08
-1.97720000372e-08
-2.00790000182e-08
-2.10050000726e-08
-2.25949999821e-08
-2.35629999956e-08
-2.38610000647e-08
-2.47670000064e-08
-2.57420000871e-08
-2.67340000137e-08
-2.77370000301e-08
-2.87850000502e-08
-3.04490000991e-08
-3.13840000654e-08
-3.1584000082e-08
-3.24479999536e-08
-3.40169999946e-08
-3.48779999326e-08
-3.55779999905e-08
-3.55789999684e-08
-3.69000000555e-08
-3.75209999737e-08
-3.79750000334e-08
-3.76650000078e-08
-3.86549999787e-08
-3.82370000107e-08
-3.90759999913e-08
-3.84720000302e-08
-3.91839999336e-08
-3.91009999934e-08
-3.88240000149e-08
-3.83569999096e-08
-3.7032000022e-08
)
;

boundaryField
{
    ground
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform -4.4037375857e-08;
    }
    top
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform -7.31845705149e-08;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
