/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.01";
    object      Exner.diff_initConds;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   nonuniform List<scalar> 
50
(
-2.55629999391e-08
-2.46879999777e-08
-2.42519999638e-08
-2.25430000222e-08
-2.26090000055e-08
-2.27659999741e-08
-2.29619999681e-08
-2.48349999454e-08
-2.50560000525e-08
-2.35799999526e-08
-2.37649999679e-08
-2.39240000033e-08
-2.40490000136e-08
-2.58860000102e-08
-2.60479999792e-08
-2.6202999992e-08
-2.46440000629e-08
-2.49089999738e-08
-2.69559999877e-08
-2.53640000114e-08
-2.55559999829e-08
-2.76549999567e-08
-2.7916999934e-08
-2.62979999999e-08
-2.65289999968e-08
-2.67330000359e-08
-2.68140000204e-08
-2.6765999972e-08
-2.66620000522e-08
-2.84730000688e-08
-2.82820000752e-08
-2.60400000451e-08
-2.57819999794e-08
-2.75459999255e-08
-2.7286000015e-08
-2.69509999873e-08
-2.46179999719e-08
-2.64550000795e-08
-2.62999999556e-08
-2.60990000722e-08
-2.38589999979e-08
-2.58739999426e-08
-2.36520000252e-08
-2.56550000133e-08
-2.33229999758e-08
-2.5324999986e-08
-2.51049999678e-08
-2.47150000465e-08
-2.39979999206e-08
-2.042199998e-08
)
;

boundaryField
{
    ground
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform -5.51423757766e-08;
    }
    top
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform -5.65745704728e-08;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
