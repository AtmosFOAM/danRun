/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "0.005";
    object      U;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   nonuniform List<vector> 
50
(
(0 0 -1.2334316096e-05)
(0 0 -3.0827339593e-05)
(0 0 -4.94645456404e-05)
(0 0 -4.96054268272e-05)
(0 0 -3.37494898829e-05)
(0 0 -2.67658593424e-05)
(0 0 -1.13132165452e-05)
(0 0 -1.5154718834e-05)
(0 0 -4.6895335926e-05)
(0 0 -5.08064283676e-05)
(0 0 -3.55062623007e-05)
(0 0 -2.88871221324e-05)
(0 0 -1.3185350091e-05)
(0 0 -1.42331871541e-05)
(0 0 -3.45445387827e-05)
(0 0 -5.45987356461e-05)
(0 0 -5.22186869375e-05)
(0 0 -2.39689329803e-05)
(0 0 -3.67595402295e-05)
(0 0 -4.9363504691e-05)
(0 0 -2.0890179886e-05)
(0 0 -2.1588621098e-05)
(0 0 -5.4465020967e-05)
(0 0 -5.81236041553e-05)
(0 0 -4.16982514138e-05)
(0 0 -3.76345775485e-05)
(0 0 -3.64313730018e-05)
(0 0 -3.20560141708e-05)
(0 0 -1.4824107676e-05)
(0 0 -1.79826886974e-05)
(0 0 -5.09215409396e-05)
(0 0 -4.98632737139e-05)
(0 0 -1.47609172368e-05)
(0 0 -1.02302609717e-05)
(0 0 -2.95989075931e-05)
(0 0 -4.58815000769e-05)
(0 0 -2.75556620238e-05)
(0 0 -9.35765685981e-06)
(0 0 -2.56116997092e-05)
(0 0 -4.23754250305e-05)
(0 0 -2.76325939001e-05)
(0 0 -2.33477260784e-05)
(0 0 -2.22016141377e-05)
(0 0 -2.13750915154e-05)
(0 0 -1.72025911184e-05)
(0 0 -2.61097406044e-06)
(0 0 -1.74746040454e-05)
(0 0 -2.49971770409e-05)
(0 0 -4.0173120386e-05)
(0 0 -2.57776198804e-05)
)
;

boundaryField
{
    ground
    {
        type            noSlip;
    }
    top
    {
        type            noSlip;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
