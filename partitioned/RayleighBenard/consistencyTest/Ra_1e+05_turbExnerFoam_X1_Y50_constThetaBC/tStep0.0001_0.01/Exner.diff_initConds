/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.01";
    object      Exner.diff_initConds;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   nonuniform List<scalar> 
50
(
5.23340000225e-08
5.00619999899e-08
4.88150000422e-08
5.20170000406e-08
6.06340000431e-08
7.12720000795e-08
7.99179999955e-08
8.47680000637e-08
8.55629999075e-08
8.38850000573e-08
8.17670000597e-08
7.98660000356e-08
7.9256999963e-08
8.0962999971e-08
8.33180000548e-08
8.31340000174e-08
7.74020000316e-08
6.74350000285e-08
5.65779999517e-08
4.64999999616e-08
3.77589999268e-08
2.81430000415e-08
1.51469999876e-08
-8.53999981842e-10
-1.73230000344e-08
-3.21010000803e-08
-4.35349999384e-08
-5.19839999935e-08
-5.87810000674e-08
-6.4011000056e-08
-6.85550000101e-08
-7.43500000455e-08
-8.26830000022e-08
-9.21780000107e-08
-9.91149999852e-08
-1.0158899999e-07
-1.03214000013e-07
-1.06983000014e-07
-1.13795999956e-07
-1.21225000038e-07
-1.27976000019e-07
-1.32192000013e-07
-1.32299999955e-07
-1.24758999909e-07
-1.12746999958e-07
-1.00479000009e-07
-9.27500000136e-08
-8.8569000023e-08
-8.54630000102e-08
-8.3622999969e-08
)
;

boundaryField
{
    ground
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform 2.27546241849e-08;
    }
    top
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform -1.19775570462e-07;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
