/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "0.01";
    object      u;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   nonuniform List<vector> 
50
(
(0 0 -9.87341697034e-06)
(0 0 -2.90067932819e-05)
(0 0 -4.81906793466e-05)
(0 0 -4.95558104423e-05)
(0 0 -3.62444911662e-05)
(0 0 -2.67124248081e-05)
(0 0 -1.38063271676e-05)
(0 0 -1.95185350144e-05)
(0 0 -4.7200383431e-05)
(0 0 -5.27305432482e-05)
(0 0 -3.94155028778e-05)
(0 0 -2.93267091804e-05)
(0 0 -1.51404135387e-05)
(0 0 -1.60783895978e-05)
(0 0 -3.54349893721e-05)
(0 0 -5.41784080198e-05)
(0 0 -5.02781529194e-05)
(0 0 -2.75303231521e-05)
(0 0 -3.56426728244e-05)
(0 0 -4.36322057562e-05)
(0 0 -2.11161843475e-05)
(0 0 -2.17413786182e-05)
(0 0 -4.955514733e-05)
(0 0 -5.46704095045e-05)
(0 0 -4.06137041159e-05)
(0 0 -3.4737777512e-05)
(0 0 -3.28651211089e-05)
(0 0 -2.68202507875e-05)
(0 0 -1.23315860047e-05)
(0 0 -1.74196013271e-05)
(0 0 -4.57284478391e-05)
(0 0 -4.50099833449e-05)
(0 0 -1.52179045101e-05)
(0 0 -9.6040671713e-06)
(0 0 -2.81247273239e-05)
(0 0 -4.23751707365e-05)
(0 0 -2.70306300154e-05)
(0 0 -1.16723961884e-05)
(0 0 -2.53011635317e-05)
(0 0 -3.95908287584e-05)
(0 0 -2.88477123505e-05)
(0 0 -2.26192979975e-05)
(0 0 -2.05631927694e-05)
(0 0 -1.85411528678e-05)
(0 0 -1.1896706021e-05)
(0 0 -3.91830930965e-08)
(0 0 -9.91178716251e-06)
(0 0 -1.89663581054e-05)
(0 0 -2.88223294738e-05)
(0 0 -1.70753750051e-05)
)
;

boundaryField
{
    ground
    {
        type            calculated;
        value           uniform (0 0 0);
    }
    top
    {
        type            calculated;
        value           uniform (0 0 0);
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
