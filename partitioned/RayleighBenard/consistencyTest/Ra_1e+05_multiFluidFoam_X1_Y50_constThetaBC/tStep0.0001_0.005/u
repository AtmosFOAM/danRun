/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "0.005";
    object      u;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   nonuniform List<vector> 
50
(
(0 0 -3.36617440807e-05)
(0 0 -6.43621097418e-05)
(0 0 -6.13880594666e-05)
(0 0 -4.39550024869e-05)
(0 0 -2.49226557949e-05)
(0 0 -7.2107402823e-06)
(0 0 2.15488375227e-05)
(0 0 -2.48818175739e-07)
(0 0 -6.5594351641e-05)
(0 0 -8.00293652092e-05)
(0 0 -3.48101802688e-05)
(0 0 -2.61558175153e-07)
(0 0 1.32956789413e-05)
(0 0 6.73232929472e-06)
(0 0 -7.74452666671e-06)
(0 0 -1.89951589044e-05)
(0 0 -2.57996427104e-06)
(0 0 2.9283942774e-05)
(0 0 -2.28326693943e-06)
(0 0 -1.14885441008e-05)
(0 0 3.013014085e-05)
(0 0 4.80800035675e-05)
(0 0 3.36545193826e-05)
(0 0 2.92029746982e-05)
(0 0 5.07031301092e-05)
(0 0 6.60603619656e-05)
(0 0 6.34647044831e-05)
(0 0 4.24268306967e-05)
(0 0 5.02348037245e-05)
(0 0 5.34652789675e-05)
(0 0 2.03067476075e-05)
(0 0 1.42369853657e-05)
(0 0 4.01764547577e-05)
(0 0 1.92132868696e-05)
(0 0 -9.39262752387e-06)
(0 0 -1.19084437613e-05)
(0 0 1.86707523021e-05)
(0 0 2.51611566472e-05)
(0 0 -4.25938392613e-06)
(0 0 -2.48592486024e-05)
(0 0 -3.79610069209e-05)
(0 0 -4.66475492116e-05)
(0 0 -3.47147985436e-05)
(0 0 -1.80055476351e-05)
(0 0 -6.24376295842e-06)
(0 0 6.50892159805e-06)
(0 0 -1.55224064969e-05)
(0 0 -3.99823751719e-05)
(0 0 -7.16552759957e-05)
(0 0 -4.29658528002e-05)
)
;

boundaryField
{
    ground
    {
        type            calculated;
        value           uniform (0 0 0);
    }
    top
    {
        type            calculated;
        value           uniform (0 0 0);
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
