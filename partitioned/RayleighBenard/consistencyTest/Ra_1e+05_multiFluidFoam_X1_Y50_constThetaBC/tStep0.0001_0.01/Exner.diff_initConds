/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.01";
    object      Exner.diff_initConds;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   nonuniform List<scalar> 
50
(
8.77700001567e-09
9.42500000267e-09
1.32359999627e-08
3.8235000055e-08
7.12359999877e-08
5.26669999834e-08
2.00009999674e-08
3.89470000695e-08
4.1721999966e-08
5.39710000025e-08
9.37770000542e-08
4.82699999971e-08
3.99489999969e-08
3.64279999499e-08
2.60250000439e-08
3.65840000516e-08
3.01210000275e-08
4.87680000827e-08
4.58969999784e-08
2.15859999875e-08
1.47329999312e-08
-3.15699999476e-09
-6.30659999779e-08
-5.8563000005e-08
-1.26600000483e-08
-2.63700006276e-09
-5.31799999592e-08
-3.41870000087e-08
-4.36229999901e-08
-6.04050000019e-08
-2.93220000502e-08
-1.01076999992e-07
-9.46729999951e-08
-8.85549999996e-08
-1.19974999935e-07
-7.02739999525e-08
-1.09242000002e-07
-6.45459999893e-08
-1.17093999941e-07
-1.07584000042e-07
-1.34721000022e-07
-8.68559999478e-08
-1.3397099996e-07
-8.58959999794e-08
-1.25517000016e-07
-8.73440000326e-08
-1.13810999958e-07
-1.09652000035e-07
-6.11469999079e-08
-8.02940000044e-08
)
;

boundaryField
{
    ground
    {
        type            partitionedHydrostaticExner;
        gradient        uniform 0;
        value           uniform 8.77700001567e-09;
    }
    top
    {
        type            partitionedHydrostaticExner;
        gradient        uniform 0;
        value           uniform -8.02940000044e-08;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
