/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volVectorField;
    location    "0.005";
    object      u;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 1 -1 0 0 0 0];

internalField   nonuniform List<vector> 
50
(
(0 0 -1.36054566954e-05)
(0 0 -3.33639382502e-05)
(0 0 -5.50887806468e-05)
(0 0 -5.88439724803e-05)
(0 0 -4.62413960634e-05)
(0 0 -4.42473732292e-05)
(0 0 -3.01886580802e-05)
(0 0 -3.42957760892e-05)
(0 0 -6.78506556219e-05)
(0 0 -7.02494878951e-05)
(0 0 -5.28907276411e-05)
(0 0 -4.63772109203e-05)
(0 0 -2.79169928831e-05)
(0 0 -2.60817047958e-05)
(0 0 -4.3426615886e-05)
(0 0 -6.06454729674e-05)
(0 0 -5.57206300967e-05)
(0 0 -2.23192699348e-05)
(0 0 -3.50461747697e-05)
(0 0 -4.76909339516e-05)
(0 0 -1.42965119409e-05)
(0 0 -1.27043455087e-05)
(0 0 -4.57918568315e-05)
(0 0 -4.71881759716e-05)
(0 0 -2.87693414879e-05)
(0 0 -2.5450154678e-05)
(0 0 -2.51857597505e-05)
(0 0 -2.23895664962e-05)
(0 0 -4.79275538365e-06)
(0 0 -8.12990872412e-06)
(0 0 -4.46577559811e-05)
(0 0 -4.5721692136e-05)
(0 0 -1.11783322434e-05)
(0 0 -1.03603969985e-05)
(0 0 -3.3556238949e-05)
(0 0 -5.42385051647e-05)
(0 0 -3.82087949507e-05)
(0 0 -2.22656389012e-05)
(0 0 -4.27931684279e-05)
(0 0 -6.32116056782e-05)
(0 0 -4.87838251675e-05)
(0 0 -4.66648981147e-05)
(0 0 -4.63608758162e-05)
(0 0 -4.51960144556e-05)
(0 0 -3.96609807691e-05)
(0 0 -1.98381969199e-05)
(0 0 -3.13283954352e-05)
(0 0 -3.23508002722e-05)
(0 0 -4.51096744274e-05)
(0 0 -2.86253154127e-05)
)
;

boundaryField
{
    ground
    {
        type            calculated;
        value           uniform (0 0 0);
    }
    top
    {
        type            calculated;
        value           uniform (0 0 0);
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
