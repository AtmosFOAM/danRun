/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.01";
    object      Exner.diff_initConds;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   nonuniform List<scalar> 
52
(
1.27565000008e-06
1.23957799991e-06
1.20498200007e-06
1.17127499999e-06
1.14015399999e-06
1.11034399997e-06
1.08179400005e-06
1.05575299991e-06
1.02950500003e-06
1.00297499994e-06
9.78780000049e-07
9.55496999966e-07
9.33062999975e-07
9.12753999938e-07
8.91816000048e-07
8.71456000029e-07
8.50273999986e-07
8.31028999948e-07
8.13601999994e-07
7.93628999962e-07
7.7535099996e-07
7.58784000077e-07
7.40814000033e-07
7.2138899998e-07
7.03416000003e-07
6.85338000017e-07
6.67016999967e-07
6.48368999934e-07
6.29365000004e-07
6.11447000032e-07
5.91386000059e-07
5.69045999987e-07
5.47586999966e-07
5.26883000007e-07
5.03630000037e-07
4.79223000061e-07
4.52098000037e-07
4.26966999978e-07
3.98865000029e-07
3.69123000055e-07
3.36184999949e-07
3.04813000063e-07
2.68254999991e-07
2.32998000005e-07
1.92231000007e-07
1.52615000082e-07
1.08895999995e-07
6.26970000361e-08
1.28710000435e-08
-4.14420000538e-08
1.27454999999e-06
-3.91659999988e-08
)
;

boundaryField
{
    ground
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform 1.27454999999e-06;
    }
    top
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform -3.91659999988e-08;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
