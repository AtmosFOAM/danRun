/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "0.005";
    object      Exner.diff_initConds;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 0 0 0 0 0 0];

internalField   nonuniform List<scalar> 
52
(
2.45247999997e-06
2.52289799996e-06
2.55170199992e-06
2.44898500013e-06
2.51843700005e-06
2.24896399992e-06
2.335879e-06
2.27508799999e-06
2.32184899995e-06
2.56757600003e-06
2.41568100001e-06
2.50025000004e-06
2.54305400005e-06
2.22995199994e-06
2.06736600006e-06
1.90072200001e-06
1.59126999999e-06
1.54016599996e-06
1.64423100002e-06
1.49133399996e-06
1.26947500001e-06
1.37091700003e-06
1.477029e-06
1.265029e-06
9.35405999991e-07
7.1767200005e-07
6.49801000008e-07
4.62078999952e-07
8.16849999863e-08
-1.23122999907e-07
-5.5910999941e-08
-1.25783999994e-07
-4.72739000057e-07
-6.48428999939e-07
-5.34540999908e-07
-7.71020999935e-07
-1.17749599993e-06
-1.25152099995e-06
-1.40486e-06
-1.76192000001e-06
-1.47727300004e-06
-1.57459299999e-06
-1.53639700007e-06
-1.28393699994e-06
-1.47140700002e-06
-1.48467200001e-06
-1.57497500008e-06
-1.72180299995e-06
-1.60204699995e-06
-1.60704700003e-06
2.37459999997e-06
-1.46947000002e-06
)
;

boundaryField
{
    ground
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform 2.37459999997e-06;
    }
    top
    {
        type            fixedFluxBuoyantExner;
        gradient        uniform 0;
        value           uniform -1.46947000002e-06;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
