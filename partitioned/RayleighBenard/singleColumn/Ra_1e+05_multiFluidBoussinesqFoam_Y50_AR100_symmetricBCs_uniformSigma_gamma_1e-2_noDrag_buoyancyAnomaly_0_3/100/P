/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  dev
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    version     2.0;
    format      ascii;
    class       volScalarField;
    location    "100";
    object      P;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

dimensions      [0 2 -2 0 0 0 0];

internalField   nonuniform List<scalar> 
50
(
3.99943083017e-16
-0.000654477701656
0.000285147446664
0.000499971535305
0.000300033425357
0.000112229393598
-0.00023162393444
-0.000628044546356
-0.000935250505715
-0.00154952344324
-0.00166588423895
-0.00194910993428
-0.00236697630015
-0.0027798217176
-0.00316812152689
-0.00315774869473
-0.00334891501519
-0.00360382523605
-0.00377180294104
-0.00416176396244
-0.00428583065408
-0.00437297767768
-0.00426744757062
-0.00421945207486
-0.00448007926955
-0.00432087621439
-0.00438599120687
-0.00441870962965
-0.00417301748304
-0.00408030524162
-0.00413658982825
-0.00375977452388
-0.00343709768436
-0.00356774967798
-0.00329422631349
-0.00291753208156
-0.00267322186695
-0.00234456575096
-0.00206845898107
-0.0017083804924
-0.00128009602649
-0.00109068385532
-0.000767202112748
-0.000149716318933
0.000232370754886
0.000394135276142
0.000506325173719
0.000247048486306
-0.000634483674065
1.63771737982e-05
)
;

boundaryField
{
    ground
    {
        type            hydrostatic;
        gradient        uniform -0.0327;
        value           uniform -0.000327;
        gradPcoeffName  gradPcoeff;
        buoyancyName    bf.sum;
    }
    top
    {
        type            hydrostatic;
        gradient        uniform -0.0327;
        value           uniform -0.000310622826202;
        gradPcoeffName  gradPcoeff;
        buoyancyName    bf.sum;
    }
    left
    {
        type            cyclic;
    }
    right
    {
        type            cyclic;
    }
    frontAndBack
    {
        type            empty;
    }
}


// ************************************************************************* //
