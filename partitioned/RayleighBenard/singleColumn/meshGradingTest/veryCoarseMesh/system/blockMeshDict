/*---------------------------------------------------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.4                                   |
|   \\  /    A nd           | Web:      http://www.openfoam.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version         2.0;
    format          ascii;

    root            "";
    case            "";
    instance        "";
    local           "";

    class           dictionary;
    object          blockMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (   0 0.02  0)         // 0
    ( 10 0.02  0)         // 1
    ( 10 0.02  1)         // 2
    (   0 0.02  1)         // 3
    (   0    0  0)         // 4
    ( 10    0  0)         // 5
    ( 10    0  1)         // 6
    (   0    0  1)         // 7
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (1 100 1) 
    simpleGrading
    (
        1   // x-direction expansion ratio
        (
            (0.1 20 1)  // lower boundary layer, 0.1 x domain depth, 20 cells, 
                        // no expansion
            (0.1 10 3)  // transition layer, from BL edge to 0.2 x domain depth,
                        // 10 cells, expansion ratio = 3
            (0.6 40 1)  // bulk layer, 60% y-dir, 40 cells, no expansion
            (0.1 10 0.33333333333333333333333333333333333)
                        // transition layer, from BL edge to 0.2 x domain depth,
                        // 10 cells, expansion ratio = 1/3
            (0.1 20 1)  // upper boundary layer, 0.1 x domain depth, 20 cells, 
                        // no expansion
        )
        3   // z-direction expansion ratio
    )

);

edges
(
);

boundary
(
    ground
    {
        type wall;
        faces
        (
            (1 5 4 0)
        );
    }
    top
    {
        type wall;
        faces
        (
            (3 7 6 2)
        );
    }
    left
    {
        type cyclic;
        neighbourPatch right;
        faces
        (
            (0 4 7 3)
        );
    }
    right
    {
        type cyclic;
        neighbourPatch left;
        faces
        (
            (1 5 6 2)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            (0 3 2 1)
            (4 5 6 7)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
