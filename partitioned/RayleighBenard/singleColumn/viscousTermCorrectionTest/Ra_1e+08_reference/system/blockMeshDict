/*---------------------------------------------------------------------------*\
| =========                 |                                                 |
| \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox           |
|  \\    /   O peration     | Version:  1.4                                   |
|   \\  /    A nd           | Web:      http://www.openfoam.org               |
|    \\/     M anipulation  |                                                 |
\*---------------------------------------------------------------------------*/

FoamFile
{
    version         2.0;
    format          ascii;

    root            "";
    case            "";
    instance        "";
    local           "";

    class           dictionary;
    object          blockMeshDict;
}

// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (   0 0.02  0)         // 0
    ( 10 0.02  0)         // 1
    ( 10 0.02  1)         // 2
    (   0 0.02  1)         // 3
    (   0    0  0)         // 4
    ( 10    0  0)         // 5
    ( 10    0  1)         // 6
    (   0    0  1)         // 7
);

blocks
(
    hex (0 1 2 3 4 5 6 7) (1 200 1) simpleGrading (1 1 1)
);

/*
// DNS resolution, with dz = eta (kolmogorov scale) in bulk
blocks
(
    hex (0 1 2 3 4 5 6 7) (1 272 1) 
    simpleGrading
    (
        1   // x-direction expansion ratio
        (
            (0.019 6 1)     // lower boundary layer, 0.01901... x domain depth, 
                            // 6 cells (dy = 3.16...e-3), no expansion
            (0.019 6 1.176570458)       // transition layer, from BL edge to 2 x 
                                        // BL edge, 6 cells, expansion 
                                        // ratio = 1.176570458
            (0.924 248 1)   // bulk layer, 92.4% y-dir, 248 cells 
                            // (dy = 3.725...e-3), no expansion
            (0.019 6 0.8499278502)      // transition layer, from BL edge to 2 x 
                                        // BL edge, 6 cells, expansion 
                                        // ratio = 0.8499278502
            (0.019 6 1)     // upper boundary layer, 0.01901... x domain depth, 
                            // 6 cells (dy = 3.16...e-3), no expansion
        )
        1   // z-direction expansion ratio
    )

);
*/

/*
// DNS resolution, with dz = 2*eta (kolmogorov scale) in bulk
blocks
(
    hex (0 1 2 3 4 5 6 7) (1 148 1) 
    simpleGrading
    (
        1   // x-direction expansion ratio
        (
            (0.019 6 1)     // lower boundary layer, 0.01901... x domain depth, 
                            // 6 cells (dy = 3.16...e-3), no expansion
            (0.019 6 2.353140917)       // transition layer, from BL edge to 2 x 
                                        // BL edge, 6 cells, expansion 
                                        // ratio = 2.353140917
            (0.924 124 1)   // bulk layer, 92.4% y-dir, 248 cells 
                            // (dy = 3.725...e-3), no expansion
            (0.019 6 0.4249639249)      // transition layer, from BL edge to 2 x 
                                        // BL edge, 6 cells, expansion 
                                        // ratio = 0.4249639249
            (0.019 6 1)     // upper boundary layer, 0.01901... x domain depth, 
                            // 6 cells (dy = 3.16...e-3), no expansion
        )
        1   // z-direction expansion ratio
    )

);
*/

edges
(
);

boundary
(
    ground
    {
        type wall;
        faces
        (
            (1 5 4 0)
        );
    }
    top
    {
        type wall;
        faces
        (
            (3 7 6 2)
        );
    }
    left
    {
        type cyclic;
        neighbourPatch right;
        faces
        (
            (0 4 7 3)
        );
    }
    right
    {
        type cyclic;
        neighbourPatch left;
        faces
        (
            (1 5 6 2)
        );
    }
    frontAndBack
    {
        type empty;
        faces
        (
            (0 3 2 1)
            (4 5 6 7)
        );
    }
);

mergePatchPairs
(
);

// ************************************************************************* //
